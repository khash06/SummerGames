// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SummerGames.Models;
using System;

namespace SummerGames.Migrations
{
    [DbContext(typeof(SummerContext))]
    [Migration("20180628021756_Player")]
    partial class Player
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("SummerGames.Models.Encounters", b =>
                {
                    b.Property<int>("EncountersId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PlayerId");

                    b.Property<string>("Story");

                    b.Property<int>("dragons");

                    b.Property<int>("orcs");

                    b.Property<int>("spiders");

                    b.Property<int>("zombies");

                    b.HasKey("EncountersId");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("encounters");
                });

            modelBuilder.Entity("SummerGames.Models.Enemies", b =>
                {
                    b.Property<int>("EnemiesId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EncountersId");

                    b.Property<int>("health");

                    b.Property<int>("healthMax");

                    b.Property<int>("strength");

                    b.HasKey("EnemiesId");

                    b.HasIndex("EncountersId");

                    b.ToTable("enemies");
                });

            modelBuilder.Entity("SummerGames.Models.Multiplayer", b =>
                {
                    b.Property<int>("MultiplayerId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EncountersId");

                    b.Property<int>("PlayerId");

                    b.HasKey("MultiplayerId");

                    b.HasIndex("EncountersId");

                    b.HasIndex("PlayerId");

                    b.ToTable("multiplayer");
                });

            modelBuilder.Entity("SummerGames.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Class");

                    b.Property<bool>("Life");

                    b.Property<string>("Password");

                    b.Property<int?>("StoryId");

                    b.Property<string>("Username");

                    b.Property<int>("dexterity");

                    b.Property<int>("health");

                    b.Property<int>("healthMax");

                    b.Property<int>("intelligence");

                    b.Property<int>("strength");

                    b.HasKey("PlayerId");

                    b.HasIndex("StoryId");

                    b.ToTable("player");
                });

            modelBuilder.Entity("SummerGames.Models.Story", b =>
                {
                    b.Property<int>("StoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Storybook");

                    b.Property<DateTime>("created_at");

                    b.HasKey("StoryId");

                    b.ToTable("storyline");
                });

            modelBuilder.Entity("SummerGames.Models.Encounters", b =>
                {
                    b.HasOne("SummerGames.Models.Player", "Player")
                        .WithOne("Encounters")
                        .HasForeignKey("SummerGames.Models.Encounters", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SummerGames.Models.Enemies", b =>
                {
                    b.HasOne("SummerGames.Models.Encounters", "Encounters")
                        .WithMany()
                        .HasForeignKey("EncountersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SummerGames.Models.Multiplayer", b =>
                {
                    b.HasOne("SummerGames.Models.Encounters", "Encounters")
                        .WithMany()
                        .HasForeignKey("EncountersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SummerGames.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SummerGames.Models.Player", b =>
                {
                    b.HasOne("SummerGames.Models.Story", "Story")
                        .WithMany()
                        .HasForeignKey("StoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
